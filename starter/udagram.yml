Description: CD12352 - Infrastructure as Code Project - Udagram

Parameters:
  ProjectName:
    Type: String
    Description: Project name used for tagging resources
  

Resources:
  # Add your resources here
  # We include a portion of the LaunchTemplate resource so you can use the UserData.
  LoadBalancerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for load balancer
      GroupName: "LoadBalancerSG"
      VpcId: 
        Fn::ImportValue: !Sub "${ProjectName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags: 
        - Key: Name
          Value: ${ProjectName}-LB-SG

  WebApplicationSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group allow access from load balencer
      GroupName: "WebApplicationSG"
      VpcId: 
        Fn::ImportValue:
          !Sub "${ProjectName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourceSecurityGroupId: !Ref LoadBalancerSG
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      Tags: 
        - Key: Name
          Value: ${ProjectName}-WEB-SG

  UdagramS3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub "udagrams3study"
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
            - Status: "Enabled"
              NoncurrentVersionExpirationInDays: 10
      PublicAccessBlockConfiguration:
        BlockPublicPolicy: false
        RestrictPublicBuckets: false
  
  BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref UdagramS3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join ['', ['arn:aws:s3:::', !Ref UdagramS3Bucket, '/*']]

  WebAppLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties: 
      LaunchTemplateName: !Sub "computetemplate"
      LaunchTemplateData:
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            apt-get update -y
            apt-get install apache2 -y
            apt-get install awscli -y 
            systemctl start apache2.service
            sudo usermod -aG www-data ubuntu
            sudo chown -R ubuntu:www-data /var/www/html/
            sudo -u ubuntu aws s3 cp s3://udagrams3study/index.html /var/www/html/
        ImageId: ami-053b0d53c279acc90
        SecurityGroupIds:
          - !Ref WebApplicationSG
        InstanceType: t2.micro
        IamInstanceProfile:
          Name: !Ref InstanceProfile
        BlockDeviceMappings:
          - DeviceName: "/dev/sdk"
            Ebs:
              VolumeSize: '10'
        
  S3InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "instancerole"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: 'Allow'
          Principal:
            Service:
            - 'ec2.amazonaws.com'
          Action: 
          - 'sts:AssumeRole'
      Policies:
        - PolicyName: s3
          PolicyDocument: 
            Version: '2012-10-17'
            Statement:
            - Effect: 'Allow'
              Action: 
              - 's3:PutObject*'
              - 's3:GetObject*'
              - 's3:DeleteObject*'
              - 's3:PutBucketPolicy'
              Resource: !GetAtt UdagramS3Bucket.Arn

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: '/'
      Roles: 
        - !Ref S3InstanceRole

  WebAppASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue: 
          !Sub "${ProjectName}-PRIV-NETS"
      LaunchTemplate:
        LaunchTemplateId: !Ref WebAppLaunchTemplate
        Version: !GetAtt WebAppLaunchTemplate.LatestVersionNumber
      MinSize: '1'
      DesiredCapacity: '1'
      MaxSize: '3'
      TargetGroupARNs:
      - Ref: TargetGroup

  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - Fn::ImportValue: !Sub "${ProjectName}-PUB1-SN"
        - Fn::ImportValue: !Sub "${ProjectName}-PUB2-SN"
      SecurityGroups:
        - Ref: LoadBalancerSG

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: TargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: '80'
      Protocol: HTTP

  LBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: 
          Ref: TargetGroup
      Conditions:
      - Field: path-pattern
        Values: [/]
      ListenerArn: 
        Ref: Listener
      Priority: 1
  
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 3
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 3
      VpcId:
        Fn::ImportValue:
          Fn::Sub: "${ProjectName}-VPCID"

Outputs:
  LoadBalancerDNSName:
    Value:
      Fn::Join:
        - ""
        - - "http://"
          - !GetAtt WebAppLB.DNSName

  
 
  

